% Matlab startup configuration

%% manage warnings

% Save the current state of the warnings
originalWarningState = warning;

% Create a cleanup object that will be executed when the function is exited
cleanupObj = onCleanup(@() warning(originalWarningState));

% Suppress warnings (e.g., generated by activating mpm)
warning("off", "MATLAB:dispatcher:nameConflict")
warning("off", "MATLAB:rmpath:DirNotFound");

%% custom settings

mSettings = settings;

% Prevent autoformatter from stripping blanks to prevent the cursor from being
% forced to the first position in indented code blocks (introduced in r2021b)
if ~verLessThan('matlab','9.11')
   mSettings.matlab.editor.indent.RemoveAutomaticWhitespace.PersonalValue = 0;
elseif verLessThan('matlab','9.14')
   % Make the desktop display larger. A warning is issued on r2023a.
   mSettings.matlab.desktop.DisplayScaleFactor.TemporaryValue = 1.2;
end

% smartIndentContents (method of class Document) programmatically formats
% docs = matlab.desktop.editor.getAll
% smartIndentContents(docs)
% save(docs)

%% set paths

HOMEPATH = getenv('HOME'); % system $HOME

% This path can change, but changing MATLABUSERPATH will break many functions.
% Unfortunately, I should have used MATLABHOMEPATH for this variable, and
% MATLABUSERPATH should point to the same path returned by 'userpath'.
setenv('MATLABUSERPATH',fullfile(HOMEPATH,'MATLAB'));

% I set this to make the setenv statements syntax more compact:
MATLABPATH = getenv('MATLABUSERPATH');      % matlab home

% user project path
setenv('USERPROJECTPATH',fullfile(HOMEPATH,'myprojects'));

% matlab functions
setenv('MATLABFUNCTIONPATH',fullfile(MATLABPATH,'matfunclib'));
setenv('MATLABTEMPLATEPATH',fullfile(MATLABPATH,'matfunclib/templates'));

% manager
setenv('TBDIRECTORYPATH',fullfile(MATLABPATH,'directory'));
setenv('PROJECTDIRECTORYPATH',fullfile(MATLABPATH,'directory'));
setenv('TBJSONACTIVATEPATH',fullfile(MATLABPATH,'matfunclib/manager/activate'));
setenv('TBJSONDEACTIVATEPATH',fullfile(MATLABPATH,'matfunclib/manager/deactivate'));
setenv('PRJJSONWORKONPATH',fullfile(MATLABPATH,'matfunclib/manager/workon'));
setenv('PRJJSONWORKOFFPATH',fullfile(MATLABPATH,'matfunclib/manager/workoff'));

% file exchange
setenv('FEXFUNCTIONPATH',fullfile(MATLABPATH,'fexfunclib'));
setenv('FEXPACKAGEPATH',fullfile(MATLABPATH,'fexpackages'));

% user data
setenv('USERDATAPATH',fullfile(HOMEPATH,'work/data'));
setenv('USERGISPATH',fullfile(HOMEPATH,'work/data/interface/GIS_data'));

% project and source code
setenv('MATLABPROJECTPATH',fullfile(HOMEPATH,'myprojects/matlab'));
setenv('MATLABSOURCEPATH',fullfile(HOMEPATH,'mysource/matlab'));

% e3sm
setenv('E3SMINPUTPATH',fullfile(getenv('USERDATAPATH'),'e3sm/input'));
setenv('E3SMOUTPUTPATH',fullfile(getenv('USERDATAPATH'),'e3sm/output'));
setenv('E3SMTEMPLATEPATH',fullfile(getenv('USERDATAPATH'),'e3sm/templates'));

%% Add shared library to path

% Ignored folders - append these to ignorePaths to use
% ignore = {'old_projects'; 'myProjects'};

% Generate a list of all sub-folders
subpaths = strsplit(genpath(getenv('MATLABUSERPATH')), pathsep);

% Remove ignored folders
ignorePaths = {'.git'; '.svn'; '.'; '..'; };
keep = @(folders, ignore) cellfun('isempty', (strfind(folders, ignore)));

for m = 1:numel(ignorePaths)
   subpaths = subpaths(keep(subpaths, ignorePaths{m}));
end

% Rebuild the path string
subpaths = strcat(subpaths, pathsep);
subpaths = horzcat(subpaths{:});

% Add the paths to the path
addpath(subpaths);

%% Figure defaults

% groot settings apply to low-level properties and therefore low-level functions
% such as 'line', but may not apply to high-level functions such as 'plot'
% (e.g., defaultAxesBox off). However, if 'hold on' is used prior to plot, these
% properties apply. So, in custom plotting functions, begin with 'hold on'.
set(groot                                                      , ...
   'defaultAxesFontName'            ,  'SF Pro Text'           , ...
   'defaultTextFontName'            ,  'SF Pro Text'           , ...
   'defaultTextInterpreter'         ,  'Tex'                   , ...
   'defaultAxesFontSize'            ,  16                      , ...
   'defaultTextFontSize'            ,  16                      , ...
   'DefaultAxesFontUnits'           ,  'points'                , ...
   'DefaultTextFontUnits'           ,  'points'                , ...
   'defaultLineLineWidth'           ,  2                       , ...
   'defaultAxesLineWidth'           ,  1                       , ...
   'defaultPatchLineWidth'          ,  1                       , ...
   'defaultAxesColor'               ,  'w'                     , ...
   'DefaultAxesXColor'              ,  [0.15 0.15 0.15]        , ...
   'DefaultAxesYColor'              ,  [0.15 0.15 0.15]        , ...
   'defaultFigureColor'             ,  'w'                     , ...
   'defaultAxesBox'                 ,  'off'                   , ...
   'DefaultAxesTickLength'          ,  [0.015 0.02]            , ...
   'defaultAxesTickDir'             ,  'out'                   , ...
   'defaultAxesXGrid'               ,  'on'                    , ...
   'defaultAxesYGrid'               ,  'on'                    , ...
   'defaultAxesXMinorGrid'          ,  'off'                   , ...
   'defaultAxesXMinorTick'          ,  'on'                    , ...
   'defaultAxesYMinorGrid'          ,  'off'                   , ...
   'defaultAxesYMinorTick'          ,  'on'                    , ...
   'defaultAxesTickDirMode'         ,  'manual'                , ...
   'defaultAxesXMinorGridMode'      ,  'manual'                , ...
   'defaultAxesXMinorTickMode'      ,  'manual'                , ...
   'defaultAxesYMinorGridMode'      ,  'manual'                , ...
   'defaultAxesYMinorTickMode'      ,  'manual'                , ...
   'defaultAxesMinorGridAlpha'      ,  0.075                   , ...
   'defaultAxesMinorGridLineStyle'  ,  '-'                     );

%% Environment configuration
beep off
format shortG % try 'doc format' for examples
format compact % use pi to see different formats: pi

%% activate toolboxes and projects

% active toolboxes
toolboxes = {'magicParser', 'BrewerMap', 'CubeHelix', 'mpm', 'CDT', ...
   'antarctic-mapping-tools', 'arctic-mapping-tools', 'gridbin'};

for n = 1:numel(toolboxes)
   try
      activate(toolboxes{n})
   catch ME
   end
end

% open the active project
if usejava('desktop')
   workon(getactiveproject())
end


%% Python configuration

if verLessThan('matlab','9.11') % <r2021b use 3.8
   try
      pyenv('Version', fullfile(HOMEPATH, '.pyenv/versions/3.8.5/bin/python'));
   catch ME
      try
         pyenv('Version', fullfile(HOMEPATH, '.pyenv/shims/python3.8'));
      catch ME
         % pyenv('Version', '/usr/bin/python3')
      end
   end

else
   try
      pyenv('Version', fullfile(HOMEPATH, '.pyenv/versions/3.9.0/bin/python'));
   catch ME
      try
         pyenv('Version', fullfile(HOMEPATH, '.pyenv/shims/python3.9'));
      catch ME
         % pyenv('Version', '/usr/bin/python3')
      end
   end
end

%% FINAL STEPS

% clear vars but not the screen b/c it deletes error msgs
clearvars

% don't forget
disp('BE GRATEFUL')

%% Notes

% default font is Monospaced. Some good ones include:
% fontName = 'Verdana';
% fontName = 'avantgarde';
% fontName = 'BitstreamSansVeraMono';
% fontName = 'Helvetica';
% fontName = 'Source Sans Pro' (nice and compact also if bold)

% regarding PATH, when matlab is started from command terminal, it inherits
% the PATH variable (modified in .bashrc), but when started from the gui
% icon, it inherits the 'default system PATH', which isn't the same as the
% one modified in .bashrc.

% update PATH (this was recommended online, but I think would not work,
% because system('echo -n $PATH') returns the system path, as noted above
% [~,result]=system('echo -n $PATH');
% setenv('PATH',result)
% clear result

% instead, i could add this (and any others I would need):
% setenv('PATH',fullfile(getenv('PATH') ':/usr/local/bin'));
% I added this below

% %% Put /usr/local/bin on path so we can see things installed by Homebrew.
% if ismac()
%     setenv('PATH', ['/usr/local/bin:' getenv('PATH')));
% end

% % add local paths to default PATH to see Homebrew installs etc.
% setenv('PATH',fullfile(getenv('PATH') ':/usr/local/bin:/Users/coop558/.pyenv'));

