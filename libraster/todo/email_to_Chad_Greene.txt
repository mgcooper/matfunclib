chad@chadagreene.com

Hi Chad,

My name is Matt Cooper, I am a PhD student working in Greenland. I've benefitted a great deal from your file exchange contributions and community answers as I try to master the mapping toolbox in Matlab. Thanks!

I've run into a repeated issue I think you can help me quickly solve, and might relate to the Antarctica Mapping Toolbox. The issue is with georeferencing gridded global datasets (e.g. GCM output) provided as .nc and/or .h5, and whether to associate the lat/lon coordinates provided with these datasets with grid cell centroids vs grid cell edges. Typically, these datasets include a 'lat' and 'lon' variable that define (in my understanding) the grid cell centroids, which are typically centered on standard parallels/meridians e.g. -90,180 would be a grid cell centroid at 90oS and 180oE.

In matlab, there is no function such as geotiffread that automatically builds a spatial reference object (commonly called 'R' by matlab) for these types of files. It is easy to build one using the lat/lon variables provided by any netcdf file, e.g:

albedo = ncread('albedo.nc','albedo')
lat = ncread('lat.nc','lat')
lon = ncread('lon.nc','lon')
latlims = [min(lat) max(lat)];
lonlims = [min(lon) max(lon)];
rastersize = size(albedo);
R = georasterref()

or, using the newer function georefcells:

The issue is that BOTH of these will incorrectly calculate the grid cell size in both latitude and longitude, referred to as the 'CellExtentInLatitude' and 'CellExtentInLongitude' in the R spatial referencing object. 

However, georefpostings gets these correct, because the 'postings' interpreation is consistent with the lat/lon coordinates as grid cell centroids. I could simply accept this and move on, but I want to create a function that is able to spatially reference any gridded dataset correctly without fail. Over the years, I have dealt with many different gridded formats that do not have


